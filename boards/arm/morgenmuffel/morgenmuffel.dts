/*
 * Copyright (c) 2019 Marco Peter
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/f2/stm32f207Xg.dtsi>
#include <dt-bindings/gpio/gpio.h>

/ {
	model = "Morgenmuffel Radioclock Board";
	compatible = "mp,morgenmuffel", "st,stm32f207";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	leds {
		compatible = "gpio-leds";
		power_led: led_1 {
			gpios = <&gpiof 9 GPIO_ACTIVE_LOW>;
			label = "LedPowerFail";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		btn_pwr: button_power {
			label = "BtnPower";
			gpios = <&gpioe 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_sel: button_select {
			label = "BtnSelect";
			gpios = <&gpiog 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_bk: button_back {
			label = "BtnBack";
			gpios = <&gpioc 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_fwd: button_forward {
			label = "BtnForward";
			gpios = <&gpioe 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_menu: button_menu {
			label = "BtnMenu";
			gpios = <&gpiof 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_play: button_play {
			label = "BtnPlay";
			gpios = <&gpioc 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_alarm1: button_alarm1 {
			label = "BtnAlarm1";
			gpios = <&gpiod 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_alarm2: button_alarm2 {
			label = "BtnAlarm2";
			gpios = <&gpiod 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		btn_alarm3: button_alarm3 {
			label = "BtnAlarm3";
			gpios = <&gpiod 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		enc_volume_a: encoder_volume_a {
			label = "EncVolA";
			gpios = <&gpioa 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		enc_volume_b: encoder_volume_b {
			label = "EncVolB";
			gpios = <&gpioe 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		enc_select_a: encoder_select_a {
			label = "EncSelA";
			gpios = <&gpiob 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
		enc_select_b: encoder_select_b {
			label = "EncSelB";
			gpios = <&gpioc 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
	};

	aliases {
		led0 = &power_led;
		sw0 = &btn_pwr;
		sw1 = &btn_sel;
		sw2 = &btn_bk;
		sw3 = &btn_fwd;
		sw4 = &btn_menu;
		sw5 = &btn_play;
		sw6 = &btn_alarm1;
		sw7 = &btn_alarm2;
		sw8 = &btn_alarm3;
	};
};

&usart1 {
	current-speed = <38400>;
	status = "okay";
};

&usart2 {
	current-speed = <38400>;
	status = "okay";
};

&usart3 {
	current-speed = <38400>;
	status = "okay";
};

&usbotg_fs {
	status = "okay";
};

&spi1 { /* Memory bus connecting M25P16 (node 0) flash and SRAM (node 1) */
	status = "okay";
	cs-gpios = <&gpiof 13 GPIO_ACTIVE_LOW>, <&gpiof 12 GPIO_ACTIVE_LOW>;
	m25p16: m25p16@0 {
		compatible = "jedec,spi-nor";
		label = "M25P16";
		reg = <0>;
		jedec-id = [20 20 15];
		spi-max-frequency = <75000000>;
		size = <0x2000000>;
		has-dpd;
		t-enter-dpd = <3000>;
		t-exit-dpd = <30000>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			storage_partition: partition@0 {
				label = "storage";
				reg = <0x00000000 0x00200000>;
			};
		};
	};
};

&spi2 { /* Peripheral bus connecting display (node 0), VS1053 CS (node 1) and DCS (node 2) and SI4689 (node 3). */
	status = "okay";
	cs-gpios = <&gpiof 3 GPIO_ACTIVE_LOW>, <&gpiod 9 GPIO_ACTIVE_LOW>, <&gpiof 6 GPIO_ACTIVE_LOW>;
	display: ssd1306@0 {
		compatible = "solomon,ssd1306fb";
		label = "SSD1306";
		reg = <0>;
		spi-max-frequency = <10000000>;
		height = <64>;
		width = <128>;
		segment-offset = <0>;
		page-offset = <0>;
		display-offset = <0>;
		multiplex-ratio = <63>;
		prechargep = <0x22>;
		reset-gpios = <&gpiof 4 GPIO_ACTIVE_LOW>;
		data_cmd-gpios = <&gpiof 5 0>;
	};
	radio: si4689@1 {
		compatible = "silabs,si468x";
		label = "TUNER";
		reg = <1>;
		spi-max-frequency = <10000000>;
		reset-gpios = <&gpiod 11 GPIO_ACTIVE_LOW>;
		int-gpios = <&gpiod 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
	};
	codec: vs1053@2 {
		compatible = "vlsi,vs1053";
		label = "CODEC";
		reg = <2>;
		spi-max-frequency = <10000000>;
		dcs-gpios = <&gpiof 10 GPIO_ACTIVE_LOW>;
		reset-gpios = <&gpiof 1 GPIO_ACTIVE_LOW>;
		dreq-gpios = <&gpiof 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	};
};

&i2c1 {
	status = "okay";
	rh_sens: sht2x@40 {
		compatible = "sensirion,sht2x";
		label = "SHT2X";
		reg = <0x40>;
	};
	pr_sens: ms5637@76 {
		compatible = "meas,ms5637";
		label = "MS5637";
		reg = <0x76>;
	};
	light_sens: apds9301@29 {
		compatible = "avago,apds9301";
		label = "APDS9301";
		reg = <0x29>;
		int-gpios = <&gpioe 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	};
};

